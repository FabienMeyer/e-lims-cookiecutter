name: main

on:
  push:
    branches: 
      - '**'

jobs:
  build:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        os: [Ubuntu]
        python-version: ["3.10"]
        include:
          - os: Ubuntu
            image: ubuntu-22.04
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Configure poetry
        id: configure-poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      # - name: Install poetry
      #   id: install-poetry
      #   run: python -m pip install poetry

      - name: Install dependencies
        run: poetry install -E doc -E tests

      - name: Run tests
        run: poetry run tox -e py310

  # linters:
  #   needs: build
  #   name: ${{ matrix.os }} / ${{ matrix.python-version }}
  #   runs-on: ${{ matrix.image }}
  #   strategy:
  #     matrix:
  #       os: [Ubuntu]
  #       python-version: ["3.10"]
  #       include:
  #         - os: Ubuntu
  #           image: ubuntu-22.04
  #     fail-fast: false
  #   defaults:
  #     run:
  #       shell: bash
  #   steps:
  #     - name


  #     - name: Run black
  #       run: poetry run tox -e black

  #     - name : Run flake8 
  #       run : poetry run tox -e flake8

  #     - name : Run mypy 
  #       run : poetry run tox -e mypy

  #     - name : Run doc8 
  #       run : poetry run tox -e doc8

  # tests:
  #   needs: build
  #   name: ${{ matrix.os }} / ${{ matrix.python-version }}
  #   runs-on: ${{ matrix.image }}
  #   strategy:
  #     matrix:
  #       os: [Ubuntu]
  #       python-version: ["3.10"]
  #       include:
  #         - os: Ubuntu
  #           image: ubuntu-22.04
  #     fail-fast: false
  #   defaults:
  #     run:
  #       shell: bash
  #   steps:     
  #     - name: Run tests
  #       run: poetry run tox -e py310
  
  # documentation:
  #   needs: build
  #   name: ${{ matrix.os }} / ${{ matrix.python-version }}
  #   runs-on: ${{ matrix.image }}
  #   strategy:
  #     matrix:
  #       os: [Ubuntu]
  #       python-version: ["3.10"]
  #       include:
  #         - os: Ubuntu
  #           image: ubuntu-22.04
  #     fail-fast: false
  #   defaults:
  #     run:
  #       shell: bash
  #   steps:
  #     - name: Build documentation
  #       run: poetry run tox -e docs
