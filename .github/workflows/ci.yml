name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    
jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12"]

    name: Tests
    runs-on: "ubuntu-latest"
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Poetry install and configure
        run: |
          pip install poetry
          poetry config cache-dir "${GITHUB_WORKSPACE}/.cache/pypoetry"
          poetry config virtualenvs.in-project true
          poetry install --no-root

      - name: Run tests
        run: |
          poetry run tox -e py312

  code-quality:
    name: Code Quality
    runs-on: "ubuntu-latest"
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Poetry install and configure
        run: |
          pip install poetry
          poetry config cache-dir "${GITHUB_WORKSPACE}/.cache/pypoetry"
          poetry config virtualenvs.in-project true
          poetry install --no-root

      - name: Run formatter
        run: |
          poetry run tox -e formatter

      - name: Run linter
        run: |
          poetry run tox -e linter

      - name: Run typer
        run: |
          poetry run tox -e typer

  documentation:
    name: Documentation
    runs-on: "ubuntu-latest"
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Poetry install and configure
        run: |
          pip install poetry
          poetry config cache-dir "${GITHUB_WORKSPACE}/.cache/pypoetry"
          poetry config virtualenvs.in-project true
          poetry install --no-root

      - name: Run documentation
        run: |
          poetry run tox -e documentation
      
  deploy-documentation:
    name: Deploy documentation
    needs: [tests, code-quality, documentation]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Configure Poetry and install dependencies
        run: |
          poetry config cache-dir "${GITHUB_WORKSPACE}/.cache/pypoetry"
          poetry config virtualenvs.in-project true
          poetry install --no-root

      - name: Build documentation
        run: poetry run tox -e documentation

      - name: Deploy to GitHub Pages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          git checkout --orphan gh-pages
          git reset --hard
          cp -r docs/build/html* .
          git add .
          git commit -m "Deploy to GitHub Pages"
          git push --force --set-upstream origin gh-pages