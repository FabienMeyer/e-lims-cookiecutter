[tox]
envlist = py312, quality, documentation
isolated_build = true
skipdist = true

[tox:.package]
basepython = python3

[testenv]
skip_install = true
allowlist_externals = 
deps = poetry
commands_pre =
    poetry install -E tests --no-root
commands =
    poetry run pytest --cov=tests
    poetry run coverage xml  

[testenv:linter]
skip_install = true
deps = poetry
commands_pre =
    poetry install --no-root
commands =
    poetry run ruff check --config=pyproject.toml --fix hooks/ tests/

[testenv:formatter]
skip_install = true
deps = poetry
commands_pre =
    poetry install --no-root
commands =
    poetry run ruff format --config=pyproject.toml hooks/ tests/

[testenv:typer]
skip_install = true
deps = poetry
commands_pre =
    poetry install --no-root
commands =
    poetry run mypy --config-file=pyproject.toml hooks/ tests/

[testenv:security]
skip_install = true
deps = poetry
commands_pre =
    poetry install --no-root    
commands =
    poetry run bandit -r -c pyproject.toml hooks/ tests/
    poetry run safety scan -r requirements.txt --full-report

[testenv:quality]
skip_install = true
deps =
    {[testenv:formatter]deps}
    {[testenv:linter]deps}
    {[testenv:typer]deps}
    {[testenv:security]deps}
commands =
    {[testenv:formatter]commands}
    {[testenv:linter]commands}
    {[testenv:typer]commands}
    {[testenv:security]commands}

[testenv:documentation]
skip_install = true
deps = poetry
commands_pre =
    poetry install -E doc --no-root
commands =
    poetry run sphinx-build -E -W -c docs/source -b html docs/source docs/build/html

[pytest]
norecursedirs = .git .* *.egg* old docs dist build
addopts = --doctest-modules
testpaths = tests/
